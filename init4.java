// Подумать над структурой класса Ноутбук для магазина техники - выделить поля и методы. Реализовать в java.

// -Создать множество ноутбуков.
// -Написать метод, который будет запрашивать у пользователя критерий (или критерии) фильтрации и выведет ноутбуки, отвечающие фильтру. Критерии фильтрации можно хранить в Map.
// Например:
// Введите цифру, соответствующую необходимому критерию:
// 1 - ОЗУ
// 2 - Объем ЖД
// 3 - Операционная система
// 4 - Цвет …
// -Далее нужно запросить минимальные значения для указанных критериев - сохранить параметры фильтрации можно также в Map.
// -Отфильтровать ноутбуки их первоначального множества и вывести проходящие по условиям.

import java.util.*;

public class Ноутбук {
    private String модель;
    private int объемОЗУ; // в гигабайтах
    private int объемЖД; // в гигабайтах
    private String операционнаяСистема;
    private String цвет;

    // Конструктор
    public Ноутбук(String модель, int объемОЗУ, int объемЖД, String операционнаяСистема, String цвет) {
        this.модель = модель;
        this.объемОЗУ = объемОЗУ;
        this.объемЖД = объемЖД;
        this.операционнаяСистема = операционнаяСистема;
        this.цвет = цвет;
    }

    // Геттеры
    public String getМодель() {
        return модель;
    }

    public int getОбъемОЗУ() {
        return объемОЗУ;
    }

    public int getОбъемЖД() {
        return объемЖД;
    }

    public String getОперационнаяСистема() {
        return операционнаяСистема;
    }

    public String getЦвет() {
        return цвет;
    }

    @Override
    public String toString() {
        return "Ноутбук{" +
                "модель='" + модель + '\'' +
                ", объемОЗУ=" + объемОЗУ +
                "GB, объемЖД=" + объемЖД +
                "GB, операционнаяСистема='" + операционнаяСистема + '\'' +
                ", цвет='" + цвет + '\'' +
                '}';
    }

    // Пример метода для фильтрации ноутбуков по заданным критериям
    public static List<Ноутбук> фильтроватьНоутбуки(Set<Ноутбук> ноутбуки, Map<Integer, Object> фильтр) {
        List<Ноутбук> результат = new ArrayList<>();

        for (Ноутбук ноутбук : ноутбуки) {
            boolean соответствует = true;

            // Применение фильтра по критериям
            for (Map.Entry<Integer, Object> entry : фильтр.entrySet()) {
                int критерий = entry.getKey();
                Object значение = entry.getValue();

                switch (критерий) {
                    case 1:
                        int минимальныйОЗУ = (int) значение;
                        if (ноутбук.getОбъемОЗУ() < минимальныйОЗУ) {
                            соответствует = false;
                        }
                        break;
                    case 2:
                        int минимальныйЖД = (int) значение;
                        if (ноутбук.getОбъемЖД() < минимальныйЖД) {
                            соответствует = false;
                        }
                        break;
                    case 3:
                        String операционнаяСистема = (String) значение;
                        if (!ноутбук.getОперационнаяСистема().equalsIgnoreCase(операционнаяСистема)) {
                            соответствует = false;
                        }
                        break;
                    case 4:
                        String цвет = (String) значение;
                        if (!ноутбук.getЦвет().equalsIgnoreCase(цвет)) {
                            соответствует = false;
                        }
                        break;
                    // Добавить дополнительные критерии по мере необходимости
                    default:
                        break;
                }

                if (!соответствует) {
                    break; // Прекращаем проверку текущего ноутбука при несоответствии хотя бы одному критерию
                }
            }

            if (соответствует) {
                результат.add(ноутбук); // Добавляем ноутбук в результаты, если он соответствует всем критериям
            }
        }

        return результат;
    }

    public static void main(String[] args) {
        // Пример использования метода фильтрации
        Ноутбук ноутбук1 = new Ноутбук("Asus ZenBook", 16, 512, "Windows 10", "серый");
        Ноутбук ноутбук2 = new Ноутбук("Apple MacBook Pro", 32, 1000, "macOS", "серебристый");
        Ноутбук ноутбук3 = new Ноутбук("Dell XPS", 8, 256, "Ubuntu", "черный");

        Set<Ноутбук> множествоНоутбуков = new HashSet<>();
        множествоНоутбуков.add(ноутбук1);
        множествоНоутбуков.add(ноутбук2);
        множествоНоутбуков.add(ноутбук3);

        Map<Integer, Object> фильтр = new HashMap<>();
        фильтр.put(1, 16); // Минимальный объем ОЗУ
        фильтр.put(2, 512); // Минимальный объем ЖД
        // Добавьте другие критерии фильтрации при необходимости

        List<Ноутбук> отфильтрованныеНоутбуки = Ноутбук.фильтроватьНоутбуки(множествоНоутбуков, фильтр);

        // Вывод результатов
        System.out.println("Отфильтрованные ноутбуки:");
        for (Ноутбук ноутбук : отфильтрованныеНоутбуки) {
            System.out.println(ноутбук);
        }
    }
}
